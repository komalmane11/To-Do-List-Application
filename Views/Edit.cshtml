@model To_Do_List_Application.Models.ToDoTask

@{
    ViewData["Title"] = "Edit Task";
}

<h1>Edit Task</h1>

<form asp-action="Edit" method="post">
    <div class="form-group">
        <label for="Title">Title</label>
        <input type="text" class="form-control" id="Title" name="Title" value="@Model.Title" />
        @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="Category">Category</label>
        <input type="text" class="form-control" id="Category" name="Category" value="@Model.Category" />
        @Html.ValidationMessageFor(m => m.Category, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="Description">Description</label>
        <textarea class="form-control" id="Description" name="Description">@Model.Description</textarea>
        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="DueDate">Due Date</label>
        <input type="date" class="form-control" id="DueDate" name="DueDate"
               value="@(Model.DueDate.HasValue ? Model.DueDate.Value.ToString("yyyy-MM-dd") : "")" />
        @Html.ValidationMessageFor(m => m.DueDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="IsCompleted">Completed</label>
        <input type="checkbox" class="form-check-input" id="IsCompleted" name="IsCompleted" @(Model.IsCompleted ? "checked" : "") />
        @Html.ValidationMessageFor(m => m.IsCompleted, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Save Changes</button>
</form>
